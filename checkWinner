
#ifndef checkWinner
#define checkWinner


//Colors Used (RGB)
int blue = makecol(0, 0, 255);
int white = makecol(255, 255, 255);
int black = makecol(0, 0, 0);
int red = makecol(220, 20, 60);
int yellow = makecol(240, 230, 100);


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//For loops to check for the winnner 
int checkWinner(int Filledin[7][6])
{
	int i, j, k, count;
	int sizeWidth = 7;
	int sizeHeight = 6;

	//checks horizontal win
	for (i = 0; i<sizeWidth; i++)
		for (j = 0; j<sizeHeight-3; j++)
			if (Filledin[i][j] != 0 && Filledin[i][j] == Filledin[i][j + 1] && Filledin[i][j] == Filledin[i][j + 2] && Filledin[i][j] == Filledin[i][j + 3])
				return 1;


	//checks vertical win
	for (i = 0; i<sizeWidth-3; i++)
		for (j = 0; j<sizeHeight; j++)
			if (Filledin[i][j] != 0 && Filledin[i][j] == Filledin[i + 1][j] && Filledin[i][j] == Filledin[i + 2][j] && Filledin[i][j] == Filledin[i + 3][j])
				return 1;

	//checks rigth diagonal win
	for (i = 0; i<sizeWidth-3; i++)
		for (j = 0; j<sizeHeight; j++)
			if (Filledin[i][j] != 0 && Filledin[i][j] == Filledin[i + 1][j + 1] && Filledin[i][j] == Filledin[i + 2][j + 2] && Filledin[i][j] == Filledin[i + 3][j + 3])
				return 1;

	//checks left diagonal win
	for (i = 0; i<sizeWidth-3; i++)
		for (j = 0; j<sizeHeight; j++)
			if (Filledin[i][j] != 0 && Filledin[i][j] == Filledin[i + 1][j - 1] && Filledin[i][j] == Filledin[i + 2][j - 2] && Filledin[i][j] == Filledin[i + 3][j - 3])
				return 1;

	return 0;
}


#endif
